$browser-context: 16; // Default

@function rem($pixels, $context: $browser-context) {
    @return #{$pixels/$context}rem;
}

@function em($pixels, $context: $browser-context) {
    @return #{$pixels/$context}em;
}

@function prc($pxOne, $pxTwo) {
    @return #{$pxOne/$pxTwo*100}'%';
}

//необходим эксперемент с переменными

$maxWidth: 1920;
$maxWidthContainer: 1200;

@mixin adaptive-value($property, $startSize, $minSize, $type) {
    $addSize: $startSize - $minSize;
    @if ($type==1) {
        //если меньше контейнера
        #{$property}: $startSize + px;
        @media (max-width: #{$maxWidthContainer+px}) {
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
        }
    } @else if ($type==2) {
        //если больше контейнера
        #{$property}: $startSize + px;
        @media (min-width: #{$maxWidthContainer+px}) {
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
        }
    } @else {
        //всегда
        #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
    }
}

@mixin bg-cover {
    background-position: center;
    background-size: cover;
    background-repeat: no-repeat;
}


@mixin flex-v-center {
    display: flex;
    align-items: center;
}

@mixin flex-h-center {
    display: flex;
    justify-content: center;
}

@mixin flex-all-center {
    display: flex;
    align-items: center;
    justify-content: center;
}

@mixin flex-all-sb {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

@mixin flex-all-sa {
    display: flex;
    align-items: center;
    justify-content: space-around;
}




